{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "9de921f4",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "da44c701",
   "metadata": {},
   "outputs": [],
   "source": [
    "data = pd.read_csv('HAM10000_metadata (2).csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "4228ec2e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>lesion_id</th>\n",
       "      <th>image_id</th>\n",
       "      <th>dx</th>\n",
       "      <th>dx_type</th>\n",
       "      <th>age</th>\n",
       "      <th>sex</th>\n",
       "      <th>localization</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>HAM_0000118</td>\n",
       "      <td>ISIC_0027419</td>\n",
       "      <td>bkl</td>\n",
       "      <td>histo</td>\n",
       "      <td>80.0</td>\n",
       "      <td>male</td>\n",
       "      <td>scalp</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>HAM_0000118</td>\n",
       "      <td>ISIC_0025030</td>\n",
       "      <td>bkl</td>\n",
       "      <td>histo</td>\n",
       "      <td>80.0</td>\n",
       "      <td>male</td>\n",
       "      <td>scalp</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>HAM_0002730</td>\n",
       "      <td>ISIC_0026769</td>\n",
       "      <td>bkl</td>\n",
       "      <td>histo</td>\n",
       "      <td>80.0</td>\n",
       "      <td>male</td>\n",
       "      <td>scalp</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>HAM_0002730</td>\n",
       "      <td>ISIC_0025661</td>\n",
       "      <td>bkl</td>\n",
       "      <td>histo</td>\n",
       "      <td>80.0</td>\n",
       "      <td>male</td>\n",
       "      <td>scalp</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>HAM_0001466</td>\n",
       "      <td>ISIC_0031633</td>\n",
       "      <td>bkl</td>\n",
       "      <td>histo</td>\n",
       "      <td>75.0</td>\n",
       "      <td>male</td>\n",
       "      <td>ear</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10010</th>\n",
       "      <td>HAM_0002867</td>\n",
       "      <td>ISIC_0033084</td>\n",
       "      <td>akiec</td>\n",
       "      <td>histo</td>\n",
       "      <td>40.0</td>\n",
       "      <td>male</td>\n",
       "      <td>abdomen</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10011</th>\n",
       "      <td>HAM_0002867</td>\n",
       "      <td>ISIC_0033550</td>\n",
       "      <td>akiec</td>\n",
       "      <td>histo</td>\n",
       "      <td>40.0</td>\n",
       "      <td>male</td>\n",
       "      <td>abdomen</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10012</th>\n",
       "      <td>HAM_0002867</td>\n",
       "      <td>ISIC_0033536</td>\n",
       "      <td>akiec</td>\n",
       "      <td>histo</td>\n",
       "      <td>40.0</td>\n",
       "      <td>male</td>\n",
       "      <td>abdomen</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10013</th>\n",
       "      <td>HAM_0000239</td>\n",
       "      <td>ISIC_0032854</td>\n",
       "      <td>akiec</td>\n",
       "      <td>histo</td>\n",
       "      <td>80.0</td>\n",
       "      <td>male</td>\n",
       "      <td>face</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10014</th>\n",
       "      <td>HAM_0003521</td>\n",
       "      <td>ISIC_0032258</td>\n",
       "      <td>mel</td>\n",
       "      <td>histo</td>\n",
       "      <td>70.0</td>\n",
       "      <td>female</td>\n",
       "      <td>back</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>10015 rows Ã— 7 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         lesion_id      image_id     dx dx_type   age     sex localization\n",
       "0      HAM_0000118  ISIC_0027419    bkl   histo  80.0    male        scalp\n",
       "1      HAM_0000118  ISIC_0025030    bkl   histo  80.0    male        scalp\n",
       "2      HAM_0002730  ISIC_0026769    bkl   histo  80.0    male        scalp\n",
       "3      HAM_0002730  ISIC_0025661    bkl   histo  80.0    male        scalp\n",
       "4      HAM_0001466  ISIC_0031633    bkl   histo  75.0    male          ear\n",
       "...            ...           ...    ...     ...   ...     ...          ...\n",
       "10010  HAM_0002867  ISIC_0033084  akiec   histo  40.0    male      abdomen\n",
       "10011  HAM_0002867  ISIC_0033550  akiec   histo  40.0    male      abdomen\n",
       "10012  HAM_0002867  ISIC_0033536  akiec   histo  40.0    male      abdomen\n",
       "10013  HAM_0000239  ISIC_0032854  akiec   histo  80.0    male         face\n",
       "10014  HAM_0003521  ISIC_0032258    mel   histo  70.0  female         back\n",
       "\n",
       "[10015 rows x 7 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "6bd57cd1",
   "metadata": {},
   "outputs": [],
   "source": [
    "counts = data['dx'].value_counts()\n",
    "min_count = min(counts)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "3dcc6230",
   "metadata": {},
   "outputs": [],
   "source": [
    "balanced_data = pd.DataFrame()\n",
    "for label in counts.index:\n",
    "    df = data[data['dx'] == label].sample(n=min_count, random_state=42)\n",
    "    balanced_data = pd.concat([balanced_data, df])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "02e0002a",
   "metadata": {},
   "outputs": [],
   "source": [
    "balanced_data = balanced_data.sample(frac=1, random_state=42)\n",
    "balanced_data.to_csv('HAM10000_balanced (2).csv', index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "ffaddbfb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>lesion_id</th>\n",
       "      <th>image_id</th>\n",
       "      <th>dx</th>\n",
       "      <th>dx_type</th>\n",
       "      <th>age</th>\n",
       "      <th>sex</th>\n",
       "      <th>localization</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1965</th>\n",
       "      <td>HAM_0001444</td>\n",
       "      <td>ISIC_0024688</td>\n",
       "      <td>mel</td>\n",
       "      <td>histo</td>\n",
       "      <td>40.0</td>\n",
       "      <td>female</td>\n",
       "      <td>lower extremity</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1139</th>\n",
       "      <td>HAM_0003290</td>\n",
       "      <td>ISIC_0030757</td>\n",
       "      <td>df</td>\n",
       "      <td>histo</td>\n",
       "      <td>80.0</td>\n",
       "      <td>male</td>\n",
       "      <td>upper extremity</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2261</th>\n",
       "      <td>HAM_0002131</td>\n",
       "      <td>ISIC_0030901</td>\n",
       "      <td>mel</td>\n",
       "      <td>histo</td>\n",
       "      <td>55.0</td>\n",
       "      <td>male</td>\n",
       "      <td>upper extremity</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9747</th>\n",
       "      <td>HAM_0005766</td>\n",
       "      <td>ISIC_0031738</td>\n",
       "      <td>akiec</td>\n",
       "      <td>histo</td>\n",
       "      <td>85.0</td>\n",
       "      <td>male</td>\n",
       "      <td>upper extremity</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9795</th>\n",
       "      <td>HAM_0005505</td>\n",
       "      <td>ISIC_0026522</td>\n",
       "      <td>akiec</td>\n",
       "      <td>histo</td>\n",
       "      <td>50.0</td>\n",
       "      <td>male</td>\n",
       "      <td>upper extremity</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4421</th>\n",
       "      <td>HAM_0001535</td>\n",
       "      <td>ISIC_0026653</td>\n",
       "      <td>nv</td>\n",
       "      <td>follow_up</td>\n",
       "      <td>45.0</td>\n",
       "      <td>male</td>\n",
       "      <td>trunk</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5977</th>\n",
       "      <td>HAM_0007271</td>\n",
       "      <td>ISIC_0027862</td>\n",
       "      <td>nv</td>\n",
       "      <td>follow_up</td>\n",
       "      <td>30.0</td>\n",
       "      <td>male</td>\n",
       "      <td>abdomen</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1035</th>\n",
       "      <td>HAM_0002034</td>\n",
       "      <td>ISIC_0027954</td>\n",
       "      <td>bkl</td>\n",
       "      <td>consensus</td>\n",
       "      <td>5.0</td>\n",
       "      <td>male</td>\n",
       "      <td>abdomen</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2555</th>\n",
       "      <td>HAM_0005530</td>\n",
       "      <td>ISIC_0029899</td>\n",
       "      <td>bcc</td>\n",
       "      <td>histo</td>\n",
       "      <td>50.0</td>\n",
       "      <td>female</td>\n",
       "      <td>chest</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4815</th>\n",
       "      <td>HAM_0002399</td>\n",
       "      <td>ISIC_0030330</td>\n",
       "      <td>nv</td>\n",
       "      <td>follow_up</td>\n",
       "      <td>60.0</td>\n",
       "      <td>male</td>\n",
       "      <td>trunk</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>805 rows Ã— 7 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        lesion_id      image_id     dx    dx_type   age     sex  \\\n",
       "1965  HAM_0001444  ISIC_0024688    mel      histo  40.0  female   \n",
       "1139  HAM_0003290  ISIC_0030757     df      histo  80.0    male   \n",
       "2261  HAM_0002131  ISIC_0030901    mel      histo  55.0    male   \n",
       "9747  HAM_0005766  ISIC_0031738  akiec      histo  85.0    male   \n",
       "9795  HAM_0005505  ISIC_0026522  akiec      histo  50.0    male   \n",
       "...           ...           ...    ...        ...   ...     ...   \n",
       "4421  HAM_0001535  ISIC_0026653     nv  follow_up  45.0    male   \n",
       "5977  HAM_0007271  ISIC_0027862     nv  follow_up  30.0    male   \n",
       "1035  HAM_0002034  ISIC_0027954    bkl  consensus   5.0    male   \n",
       "2555  HAM_0005530  ISIC_0029899    bcc      histo  50.0  female   \n",
       "4815  HAM_0002399  ISIC_0030330     nv  follow_up  60.0    male   \n",
       "\n",
       "         localization  \n",
       "1965  lower extremity  \n",
       "1139  upper extremity  \n",
       "2261  upper extremity  \n",
       "9747  upper extremity  \n",
       "9795  upper extremity  \n",
       "...               ...  \n",
       "4421            trunk  \n",
       "5977          abdomen  \n",
       "1035          abdomen  \n",
       "2555            chest  \n",
       "4815            trunk  \n",
       "\n",
       "[805 rows x 7 columns]"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "balanced_data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "3f763a4c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "5635"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "balanced_data.size"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "3070a386",
   "metadata": {},
   "outputs": [],
   "source": [
    "balanced_data.to_csv('HAM10000_balanced (2).csv', index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "641f89ae",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2023-04-16 18:47:21.395797: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 FMA\n",
      "To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.\n",
      "2023-04-16 18:47:21.714811: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory\n",
      "2023-04-16 18:47:21.714846: I tensorflow/compiler/xla/stream_executor/cuda/cudart_stub.cc:29] Ignore above cudart dlerror if you do not have a GPU set up on your machine.\n",
      "2023-04-16 18:47:22.784667: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory\n",
      "2023-04-16 18:47:22.784757: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory\n",
      "2023-04-16 18:47:22.784766: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.\n"
     ]
    }
   ],
   "source": [
    "import os\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.metrics import classification_report\n",
    "\n",
    "import tensorflow as tf\n",
    "from tensorflow.keras.layers import Input, Conv2D, MaxPooling2D, Dropout, Flatten, Dense\n",
    "from tensorflow.keras.models import Model\n",
    "from tensorflow.keras.utils import to_categorical"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "b330f4b5",
   "metadata": {},
   "outputs": [],
   "source": [
    "base_dir = \"HAM10000_balanced\"\n",
    "df = pd.read_csv(\"HAM10000_balanced (2).csv\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "d1b2158c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>lesion_id</th>\n",
       "      <th>image_id</th>\n",
       "      <th>label</th>\n",
       "      <th>dx_type</th>\n",
       "      <th>age</th>\n",
       "      <th>sex</th>\n",
       "      <th>localization</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>HAM_0001444</td>\n",
       "      <td>ISIC_0024688</td>\n",
       "      <td>mel</td>\n",
       "      <td>histo</td>\n",
       "      <td>40.0</td>\n",
       "      <td>female</td>\n",
       "      <td>lower extremity</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>HAM_0003290</td>\n",
       "      <td>ISIC_0030757</td>\n",
       "      <td>df</td>\n",
       "      <td>histo</td>\n",
       "      <td>80.0</td>\n",
       "      <td>male</td>\n",
       "      <td>upper extremity</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>HAM_0002131</td>\n",
       "      <td>ISIC_0030901</td>\n",
       "      <td>mel</td>\n",
       "      <td>histo</td>\n",
       "      <td>55.0</td>\n",
       "      <td>male</td>\n",
       "      <td>upper extremity</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>HAM_0005766</td>\n",
       "      <td>ISIC_0031738</td>\n",
       "      <td>akiec</td>\n",
       "      <td>histo</td>\n",
       "      <td>85.0</td>\n",
       "      <td>male</td>\n",
       "      <td>upper extremity</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>HAM_0005505</td>\n",
       "      <td>ISIC_0026522</td>\n",
       "      <td>akiec</td>\n",
       "      <td>histo</td>\n",
       "      <td>50.0</td>\n",
       "      <td>male</td>\n",
       "      <td>upper extremity</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>800</th>\n",
       "      <td>HAM_0001535</td>\n",
       "      <td>ISIC_0026653</td>\n",
       "      <td>nv</td>\n",
       "      <td>follow_up</td>\n",
       "      <td>45.0</td>\n",
       "      <td>male</td>\n",
       "      <td>trunk</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>801</th>\n",
       "      <td>HAM_0007271</td>\n",
       "      <td>ISIC_0027862</td>\n",
       "      <td>nv</td>\n",
       "      <td>follow_up</td>\n",
       "      <td>30.0</td>\n",
       "      <td>male</td>\n",
       "      <td>abdomen</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>802</th>\n",
       "      <td>HAM_0002034</td>\n",
       "      <td>ISIC_0027954</td>\n",
       "      <td>bkl</td>\n",
       "      <td>consensus</td>\n",
       "      <td>5.0</td>\n",
       "      <td>male</td>\n",
       "      <td>abdomen</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>803</th>\n",
       "      <td>HAM_0005530</td>\n",
       "      <td>ISIC_0029899</td>\n",
       "      <td>bcc</td>\n",
       "      <td>histo</td>\n",
       "      <td>50.0</td>\n",
       "      <td>female</td>\n",
       "      <td>chest</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>804</th>\n",
       "      <td>HAM_0002399</td>\n",
       "      <td>ISIC_0030330</td>\n",
       "      <td>nv</td>\n",
       "      <td>follow_up</td>\n",
       "      <td>60.0</td>\n",
       "      <td>male</td>\n",
       "      <td>trunk</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>805 rows Ã— 7 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       lesion_id      image_id  label    dx_type   age     sex  \\\n",
       "0    HAM_0001444  ISIC_0024688    mel      histo  40.0  female   \n",
       "1    HAM_0003290  ISIC_0030757     df      histo  80.0    male   \n",
       "2    HAM_0002131  ISIC_0030901    mel      histo  55.0    male   \n",
       "3    HAM_0005766  ISIC_0031738  akiec      histo  85.0    male   \n",
       "4    HAM_0005505  ISIC_0026522  akiec      histo  50.0    male   \n",
       "..           ...           ...    ...        ...   ...     ...   \n",
       "800  HAM_0001535  ISIC_0026653     nv  follow_up  45.0    male   \n",
       "801  HAM_0007271  ISIC_0027862     nv  follow_up  30.0    male   \n",
       "802  HAM_0002034  ISIC_0027954    bkl  consensus   5.0    male   \n",
       "803  HAM_0005530  ISIC_0029899    bcc      histo  50.0  female   \n",
       "804  HAM_0002399  ISIC_0030330     nv  follow_up  60.0    male   \n",
       "\n",
       "        localization  \n",
       "0    lower extremity  \n",
       "1    upper extremity  \n",
       "2    upper extremity  \n",
       "3    upper extremity  \n",
       "4    upper extremity  \n",
       "..               ...  \n",
       "800            trunk  \n",
       "801          abdomen  \n",
       "802          abdomen  \n",
       "803            chest  \n",
       "804            trunk  \n",
       "\n",
       "[805 rows x 7 columns]"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "balanced_data = balanced_data.rename(columns={\"ID\": \"label\"})\n",
    "\n",
    "balanced_data =balanced_data.reset_index(drop=True)\n",
    "balanced_data"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b0e30c45",
   "metadata": {},
   "source": [
    "\n",
    "import pandas as pd\n",
    "\n",
    "images = []\n",
    "labels = []\n",
    "\n",
    "\n",
    "base_dir = \"Images\"\n",
    "\n",
    "for i in range(len(balanced_data)):\n",
    "    # Load the image and convert it to grayscale\n",
    "    img_path = os.path.join(base_dir, balanced_data['image_id'][i]+ '.jpg')\n",
    "    img = plt.imread(img_path)\n",
    "    img = np.mean(img, axis=2)\n",
    "\n",
    "   \n",
    "    img = tf.image.resize(img, size=(256, 256))\n",
    "\n",
    "    # Normalize the image pixel values to be between 0 and 1\n",
    "    img = img / 255.0\n",
    "\n",
    "    # Add the image and label to the lists\n",
    "    images.append(img)\n",
    "    labels.append(balanced_data['label'][i])\n",
    "\n",
    "    # Convert the images and labels to numpy arrays\n",
    "    images = np.array(images)\n",
    "    labels = np.array(labels)\n",
    "\n",
    "    # Convert the labels to one-hot encoded vectors\n",
    "    labels = to_categorical(labels)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "60e9767b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['mel', 'df', 'akiec', 'bkl', 'nv', 'vasc', 'bcc'], dtype=object)"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "balanced_data['label'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "87780249",
   "metadata": {},
   "outputs": [],
   "source": [
    "# label to number\n",
    "balanced_data['label'] = balanced_data['label'].map({'akiec': 0, 'bcc': 1, 'bkl': 2, 'df': 3, 'mel': 4, 'nv': 5, 'vasc': 6})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "bec378de",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "=====================================\n",
      "0\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "4\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "5\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "7\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "8\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "9\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "11\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "15\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "18\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "19\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "21\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "22\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "24\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "26\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "27\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "28\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "29\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "30\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "34\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "35\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "36\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "37\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "38\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "46\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "50\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "51\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "53\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "54\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "60\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "66\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "67\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "70\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "73\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "75\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "76\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "83\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "84\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "85\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "86\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "87\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "88\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "90\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "92\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "93\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "94\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "96\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "97\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "98\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "101\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "103\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "104\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "108\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "109\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "111\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "112\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "115\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "117\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "118\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "120\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "121\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "122\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "125\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "126\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "128\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "130\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "132\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "133\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "134\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "136\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "144\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "147\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "148\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "149\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "150\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "151\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "152\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "153\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "155\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "156\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "157\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "158\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "159\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "162\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "163\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "165\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "170\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "171\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "176\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "180\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "181\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "183\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "185\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "187\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "195\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "196\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "198\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "199\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "202\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "203\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "206\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "207\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "209\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "210\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "211\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "212\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "213\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "215\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "216\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "217\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "220\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "223\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "224\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "225\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "230\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "232\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "233\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "237\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "239\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "243\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "245\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "252\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "254\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "259\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "261\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "263\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "268\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "270\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "271\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "275\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "276\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "277\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "280\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "282\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "286\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "287\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "289\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "290\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "291\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "293\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "297\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "298\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "299\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "303\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "306\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "311\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "317\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "318\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "319\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "320\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "321\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "323\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "324\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "325\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "326\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "328\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "329\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "330\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "332\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "336\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "337\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "338\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "339\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "343\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "348\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "351\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "352\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "353\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "354\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "355\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "357\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "358\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "359\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "360\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "365\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "366\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "367\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "368\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "369\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "371\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "374\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "375\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "376\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "377\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "379\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "381\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "383\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "384\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "385\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "387\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "388\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "393\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "395\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "396\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "398\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "400\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "401\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "402\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "403\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "404\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "408\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "410\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "411\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "414\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "415\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "422\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "426\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "427\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "430\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "434\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "435\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "437\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "438\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "441\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "443\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "444\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "447\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "448\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "450\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "451\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "452\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "455\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "456\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "457\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "459\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "460\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "461\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "462\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "463\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "464\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "465\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "469\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "471\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "472\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "476\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "477\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "478\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "481\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "483\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "484\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "485\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "486\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "488\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "492\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "494\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "496\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "498\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "500\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "501\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "502\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "503\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "504\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "506\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "507\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "509\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "511\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "512\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "513\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "514\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "516\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "517\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "519\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "521\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "529\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "530\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "531\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "534\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "537\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "538\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "539\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "540\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "543\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "544\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "545\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "546\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "549\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "550\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "551\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "552\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "555\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "558\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "559\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "561\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "563\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "564\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "567\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "568\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "569\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "570\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "573\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "574\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "578\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "579\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "581\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "582\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "583\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "585\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "586\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "589\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "591\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "593\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "594\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "595\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "598\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "601\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "602\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "604\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "605\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "606\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "607\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "609\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "610\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "612\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "616\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "619\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "620\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "621\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "623\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "626\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "628\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "630\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "634\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "635\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "638\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "640\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "641\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "643\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "644\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "646\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "647\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "648\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "649\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "650\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "652\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "655\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "657\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "659\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "664\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "669\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "674\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "677\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "678\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "681\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "682\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "683\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "686\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "687\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "688\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "689\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "692\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "693\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "694\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "696\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "698\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "700\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "701\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "704\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "705\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "706\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "708\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "711\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "712\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "713\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "717\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "719\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "720\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "721\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "723\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "724\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "727\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "728\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "730\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "731\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "733\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "736\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "737\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "738\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "740\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "743\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "744\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "745\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "748\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "750\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "754\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "755\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "758\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "759\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "760\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "761\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "762\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "764\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "767\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "768\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "769\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "770\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "771\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "773\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "775\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "776\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "777\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "782\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "786\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "793\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "794\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "795\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "800\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "801\n",
      "(450, 600, 3)\n",
      "=====================================\n",
      "802\n",
      "(450, 600, 3)\n"
     ]
    }
   ],
   "source": [
    "# Preprocess the images\n",
    "images = []\n",
    "labels = []\n",
    "\n",
    "base_dir = \"Images\"\n",
    "\n",
    "for i in range(len(balanced_data)):\n",
    "    try:\n",
    "        # Load the image and convert it to grayscale\n",
    "        img = plt.imread(base_dir + '/' + balanced_data['image_id'][i]+'.jpg')\n",
    "        # img = np.mean(img, axis=2)\n",
    "        print(\"=====================================\")\n",
    "        print(i)\n",
    "        print(img.shape)\n",
    "\n",
    "        # Resize the image to 256x256 pixels\n",
    "        img = tf.image.resize(img, size=(256, 256))\n",
    "\n",
    "        # Normalize the image pixel values to be between 0 and 1\n",
    "        img = img / 255.0\n",
    "\n",
    "        # Add the image and label to the lists\n",
    "        images.append(img)\n",
    "        labels.append(balanced_data['label'][i])\n",
    "    except:\n",
    "        pass\n",
    "\n",
    "# Convert the images and labels to numpy arrays\n",
    "images = np.array(images)\n",
    "labels = np.array(labels)\n",
    "\n",
    "# Convert the labels to one-hot encoded vectors\n",
    "labels = to_categorical(labels)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "c2054675",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0      ISIC_0024688\n",
       "1      ISIC_0030757\n",
       "2      ISIC_0030901\n",
       "3      ISIC_0031738\n",
       "4      ISIC_0026522\n",
       "           ...     \n",
       "800    ISIC_0026653\n",
       "801    ISIC_0027862\n",
       "802    ISIC_0027954\n",
       "803    ISIC_0029899\n",
       "804    ISIC_0030330\n",
       "Name: image_id, Length: 805, dtype: object"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "balanced_data['image_id']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "41e1f3fc",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Split the data into training and testing sets\n",
    "X_train, X_test, y_train, y_test = train_test_split(images, labels, test_size=0.2, random_state=42)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "7e2a020c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[0., 0., 0., ..., 1., 0., 0.],\n",
       "       [1., 0., 0., ..., 0., 0., 0.],\n",
       "       [0., 0., 0., ..., 0., 0., 0.],\n",
       "       ...,\n",
       "       [0., 0., 0., ..., 0., 1., 0.],\n",
       "       [0., 0., 0., ..., 0., 1., 0.],\n",
       "       [0., 0., 1., ..., 0., 0., 0.]], dtype=float32)"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "labels"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "72e159a1",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Define the CNN model\n",
    "inputs = Input(shape=(256, 256, 3))\n",
    "\n",
    "x = Conv2D(filters=32, kernel_size=(3, 3), activation='relu', padding='same')(inputs)\n",
    "x = MaxPooling2D(pool_size=(2, 2))(x)\n",
    "x = Dropout(rate=0.25)(x)\n",
    "\n",
    "x = Conv2D(filters=64, kernel_size=(3, 3), activation='relu', padding='same')(x)\n",
    "x = MaxPooling2D(pool_size=(2, 2))(x)\n",
    "x = Dropout(rate=0.25)(x)\n",
    "\n",
    "x = Conv2D(filters=128, kernel_size=(3, 3), activation='relu', padding='same')(x)\n",
    "x = MaxPooling2D(pool_size=(2, 2))(x)\n",
    "x = Dropout(rate=0.25)(x)\n",
    "\n",
    "x = Flatten()(x)\n",
    "\n",
    "x = Dense(units=512, activation='relu')(x)\n",
    "x = Dropout(rate=0.5)(x)\n",
    "\n",
    "outputs = Dense(7, activation='softmax')(x)\n",
    "\n",
    "model = Model(inputs=inputs, outputs=outputs)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "a548ea7d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/10\n",
      "11/11 [==============================] - 43s 4s/step - loss: 11.1774 - accuracy: 0.1385 - val_loss: 1.9454 - val_accuracy: 0.1951\n",
      "Epoch 2/10\n",
      " 6/11 [===============>..............] - ETA: 17s - loss: 1.9477 - accuracy: 0.1354"
     ]
    },
    {
     "ename": "KeyboardInterrupt",
     "evalue": "",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
      "Cell \u001b[0;32mIn[41], line 5\u001b[0m\n\u001b[1;32m      2\u001b[0m model\u001b[39m.\u001b[39mcompile(optimizer\u001b[39m=\u001b[39m\u001b[39m'\u001b[39m\u001b[39madam\u001b[39m\u001b[39m'\u001b[39m, loss\u001b[39m=\u001b[39m\u001b[39m'\u001b[39m\u001b[39mcategorical_crossentropy\u001b[39m\u001b[39m'\u001b[39m, metrics\u001b[39m=\u001b[39m[\u001b[39m'\u001b[39m\u001b[39maccuracy\u001b[39m\u001b[39m'\u001b[39m])\n\u001b[1;32m      4\u001b[0m \u001b[39m# Train the model\u001b[39;00m\n\u001b[0;32m----> 5\u001b[0m history \u001b[39m=\u001b[39m model\u001b[39m.\u001b[39;49mfit(x\u001b[39m=\u001b[39;49mX_train, y\u001b[39m=\u001b[39;49my_train, validation_data\u001b[39m=\u001b[39;49m(X_test, y_test), epochs\u001b[39m=\u001b[39;49m\u001b[39m10\u001b[39;49m, batch_size\u001b[39m=\u001b[39;49m\u001b[39m32\u001b[39;49m)\n",
      "File \u001b[0;32m/usr/local/lib/python3.8/dist-packages/keras/utils/traceback_utils.py:65\u001b[0m, in \u001b[0;36mfilter_traceback.<locals>.error_handler\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m     63\u001b[0m filtered_tb \u001b[39m=\u001b[39m \u001b[39mNone\u001b[39;00m\n\u001b[1;32m     64\u001b[0m \u001b[39mtry\u001b[39;00m:\n\u001b[0;32m---> 65\u001b[0m     \u001b[39mreturn\u001b[39;00m fn(\u001b[39m*\u001b[39;49margs, \u001b[39m*\u001b[39;49m\u001b[39m*\u001b[39;49mkwargs)\n\u001b[1;32m     66\u001b[0m \u001b[39mexcept\u001b[39;00m \u001b[39mException\u001b[39;00m \u001b[39mas\u001b[39;00m e:\n\u001b[1;32m     67\u001b[0m     filtered_tb \u001b[39m=\u001b[39m _process_traceback_frames(e\u001b[39m.\u001b[39m__traceback__)\n",
      "File \u001b[0;32m/usr/local/lib/python3.8/dist-packages/keras/engine/training.py:1650\u001b[0m, in \u001b[0;36mModel.fit\u001b[0;34m(self, x, y, batch_size, epochs, verbose, callbacks, validation_split, validation_data, shuffle, class_weight, sample_weight, initial_epoch, steps_per_epoch, validation_steps, validation_batch_size, validation_freq, max_queue_size, workers, use_multiprocessing)\u001b[0m\n\u001b[1;32m   1642\u001b[0m \u001b[39mwith\u001b[39;00m tf\u001b[39m.\u001b[39mprofiler\u001b[39m.\u001b[39mexperimental\u001b[39m.\u001b[39mTrace(\n\u001b[1;32m   1643\u001b[0m     \u001b[39m\"\u001b[39m\u001b[39mtrain\u001b[39m\u001b[39m\"\u001b[39m,\n\u001b[1;32m   1644\u001b[0m     epoch_num\u001b[39m=\u001b[39mepoch,\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m   1647\u001b[0m     _r\u001b[39m=\u001b[39m\u001b[39m1\u001b[39m,\n\u001b[1;32m   1648\u001b[0m ):\n\u001b[1;32m   1649\u001b[0m     callbacks\u001b[39m.\u001b[39mon_train_batch_begin(step)\n\u001b[0;32m-> 1650\u001b[0m     tmp_logs \u001b[39m=\u001b[39m \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49mtrain_function(iterator)\n\u001b[1;32m   1651\u001b[0m     \u001b[39mif\u001b[39;00m data_handler\u001b[39m.\u001b[39mshould_sync:\n\u001b[1;32m   1652\u001b[0m         context\u001b[39m.\u001b[39masync_wait()\n",
      "File \u001b[0;32m~/.local/lib/python3.8/site-packages/tensorflow/python/util/traceback_utils.py:150\u001b[0m, in \u001b[0;36mfilter_traceback.<locals>.error_handler\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    148\u001b[0m filtered_tb \u001b[39m=\u001b[39m \u001b[39mNone\u001b[39;00m\n\u001b[1;32m    149\u001b[0m \u001b[39mtry\u001b[39;00m:\n\u001b[0;32m--> 150\u001b[0m   \u001b[39mreturn\u001b[39;00m fn(\u001b[39m*\u001b[39;49margs, \u001b[39m*\u001b[39;49m\u001b[39m*\u001b[39;49mkwargs)\n\u001b[1;32m    151\u001b[0m \u001b[39mexcept\u001b[39;00m \u001b[39mException\u001b[39;00m \u001b[39mas\u001b[39;00m e:\n\u001b[1;32m    152\u001b[0m   filtered_tb \u001b[39m=\u001b[39m _process_traceback_frames(e\u001b[39m.\u001b[39m__traceback__)\n",
      "File \u001b[0;32m~/.local/lib/python3.8/site-packages/tensorflow/python/eager/polymorphic_function/polymorphic_function.py:880\u001b[0m, in \u001b[0;36mFunction.__call__\u001b[0;34m(self, *args, **kwds)\u001b[0m\n\u001b[1;32m    877\u001b[0m compiler \u001b[39m=\u001b[39m \u001b[39m\"\u001b[39m\u001b[39mxla\u001b[39m\u001b[39m\"\u001b[39m \u001b[39mif\u001b[39;00m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39m_jit_compile \u001b[39melse\u001b[39;00m \u001b[39m\"\u001b[39m\u001b[39mnonXla\u001b[39m\u001b[39m\"\u001b[39m\n\u001b[1;32m    879\u001b[0m \u001b[39mwith\u001b[39;00m OptionalXlaContext(\u001b[39mself\u001b[39m\u001b[39m.\u001b[39m_jit_compile):\n\u001b[0;32m--> 880\u001b[0m   result \u001b[39m=\u001b[39m \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49m_call(\u001b[39m*\u001b[39;49margs, \u001b[39m*\u001b[39;49m\u001b[39m*\u001b[39;49mkwds)\n\u001b[1;32m    882\u001b[0m new_tracing_count \u001b[39m=\u001b[39m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39mexperimental_get_tracing_count()\n\u001b[1;32m    883\u001b[0m without_tracing \u001b[39m=\u001b[39m (tracing_count \u001b[39m==\u001b[39m new_tracing_count)\n",
      "File \u001b[0;32m~/.local/lib/python3.8/site-packages/tensorflow/python/eager/polymorphic_function/polymorphic_function.py:912\u001b[0m, in \u001b[0;36mFunction._call\u001b[0;34m(self, *args, **kwds)\u001b[0m\n\u001b[1;32m    909\u001b[0m   \u001b[39mself\u001b[39m\u001b[39m.\u001b[39m_lock\u001b[39m.\u001b[39mrelease()\n\u001b[1;32m    910\u001b[0m   \u001b[39m# In this case we have created variables on the first call, so we run the\u001b[39;00m\n\u001b[1;32m    911\u001b[0m   \u001b[39m# defunned version which is guaranteed to never create variables.\u001b[39;00m\n\u001b[0;32m--> 912\u001b[0m   \u001b[39mreturn\u001b[39;00m \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49m_no_variable_creation_fn(\u001b[39m*\u001b[39;49margs, \u001b[39m*\u001b[39;49m\u001b[39m*\u001b[39;49mkwds)  \u001b[39m# pylint: disable=not-callable\u001b[39;00m\n\u001b[1;32m    913\u001b[0m \u001b[39melif\u001b[39;00m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39m_variable_creation_fn \u001b[39mis\u001b[39;00m \u001b[39mnot\u001b[39;00m \u001b[39mNone\u001b[39;00m:\n\u001b[1;32m    914\u001b[0m   \u001b[39m# Release the lock early so that multiple threads can perform the call\u001b[39;00m\n\u001b[1;32m    915\u001b[0m   \u001b[39m# in parallel.\u001b[39;00m\n\u001b[1;32m    916\u001b[0m   \u001b[39mself\u001b[39m\u001b[39m.\u001b[39m_lock\u001b[39m.\u001b[39mrelease()\n",
      "File \u001b[0;32m~/.local/lib/python3.8/site-packages/tensorflow/python/eager/polymorphic_function/tracing_compiler.py:134\u001b[0m, in \u001b[0;36mTracingCompiler.__call__\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m    131\u001b[0m \u001b[39mwith\u001b[39;00m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39m_lock:\n\u001b[1;32m    132\u001b[0m   (concrete_function,\n\u001b[1;32m    133\u001b[0m    filtered_flat_args) \u001b[39m=\u001b[39m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39m_maybe_define_function(args, kwargs)\n\u001b[0;32m--> 134\u001b[0m \u001b[39mreturn\u001b[39;00m concrete_function\u001b[39m.\u001b[39;49m_call_flat(\n\u001b[1;32m    135\u001b[0m     filtered_flat_args, captured_inputs\u001b[39m=\u001b[39;49mconcrete_function\u001b[39m.\u001b[39;49mcaptured_inputs)\n",
      "File \u001b[0;32m~/.local/lib/python3.8/site-packages/tensorflow/python/eager/polymorphic_function/monomorphic_function.py:1745\u001b[0m, in \u001b[0;36mConcreteFunction._call_flat\u001b[0;34m(self, args, captured_inputs, cancellation_manager)\u001b[0m\n\u001b[1;32m   1741\u001b[0m possible_gradient_type \u001b[39m=\u001b[39m gradients_util\u001b[39m.\u001b[39mPossibleTapeGradientTypes(args)\n\u001b[1;32m   1742\u001b[0m \u001b[39mif\u001b[39;00m (possible_gradient_type \u001b[39m==\u001b[39m gradients_util\u001b[39m.\u001b[39mPOSSIBLE_GRADIENT_TYPES_NONE\n\u001b[1;32m   1743\u001b[0m     \u001b[39mand\u001b[39;00m executing_eagerly):\n\u001b[1;32m   1744\u001b[0m   \u001b[39m# No tape is watching; skip to running the function.\u001b[39;00m\n\u001b[0;32m-> 1745\u001b[0m   \u001b[39mreturn\u001b[39;00m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39m_build_call_outputs(\u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49m_inference_function\u001b[39m.\u001b[39;49mcall(\n\u001b[1;32m   1746\u001b[0m       ctx, args, cancellation_manager\u001b[39m=\u001b[39;49mcancellation_manager))\n\u001b[1;32m   1747\u001b[0m forward_backward \u001b[39m=\u001b[39m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39m_select_forward_and_backward_functions(\n\u001b[1;32m   1748\u001b[0m     args,\n\u001b[1;32m   1749\u001b[0m     possible_gradient_type,\n\u001b[1;32m   1750\u001b[0m     executing_eagerly)\n\u001b[1;32m   1751\u001b[0m forward_function, args_with_tangents \u001b[39m=\u001b[39m forward_backward\u001b[39m.\u001b[39mforward()\n",
      "File \u001b[0;32m~/.local/lib/python3.8/site-packages/tensorflow/python/eager/polymorphic_function/monomorphic_function.py:378\u001b[0m, in \u001b[0;36m_EagerDefinedFunction.call\u001b[0;34m(self, ctx, args, cancellation_manager)\u001b[0m\n\u001b[1;32m    376\u001b[0m \u001b[39mwith\u001b[39;00m _InterpolateFunctionError(\u001b[39mself\u001b[39m):\n\u001b[1;32m    377\u001b[0m   \u001b[39mif\u001b[39;00m cancellation_manager \u001b[39mis\u001b[39;00m \u001b[39mNone\u001b[39;00m:\n\u001b[0;32m--> 378\u001b[0m     outputs \u001b[39m=\u001b[39m execute\u001b[39m.\u001b[39;49mexecute(\n\u001b[1;32m    379\u001b[0m         \u001b[39mstr\u001b[39;49m(\u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49msignature\u001b[39m.\u001b[39;49mname),\n\u001b[1;32m    380\u001b[0m         num_outputs\u001b[39m=\u001b[39;49m\u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49m_num_outputs,\n\u001b[1;32m    381\u001b[0m         inputs\u001b[39m=\u001b[39;49margs,\n\u001b[1;32m    382\u001b[0m         attrs\u001b[39m=\u001b[39;49mattrs,\n\u001b[1;32m    383\u001b[0m         ctx\u001b[39m=\u001b[39;49mctx)\n\u001b[1;32m    384\u001b[0m   \u001b[39melse\u001b[39;00m:\n\u001b[1;32m    385\u001b[0m     outputs \u001b[39m=\u001b[39m execute\u001b[39m.\u001b[39mexecute_with_cancellation(\n\u001b[1;32m    386\u001b[0m         \u001b[39mstr\u001b[39m(\u001b[39mself\u001b[39m\u001b[39m.\u001b[39msignature\u001b[39m.\u001b[39mname),\n\u001b[1;32m    387\u001b[0m         num_outputs\u001b[39m=\u001b[39m\u001b[39mself\u001b[39m\u001b[39m.\u001b[39m_num_outputs,\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m    390\u001b[0m         ctx\u001b[39m=\u001b[39mctx,\n\u001b[1;32m    391\u001b[0m         cancellation_manager\u001b[39m=\u001b[39mcancellation_manager)\n",
      "File \u001b[0;32m~/.local/lib/python3.8/site-packages/tensorflow/python/eager/execute.py:52\u001b[0m, in \u001b[0;36mquick_execute\u001b[0;34m(op_name, num_outputs, inputs, attrs, ctx, name)\u001b[0m\n\u001b[1;32m     50\u001b[0m \u001b[39mtry\u001b[39;00m:\n\u001b[1;32m     51\u001b[0m   ctx\u001b[39m.\u001b[39mensure_initialized()\n\u001b[0;32m---> 52\u001b[0m   tensors \u001b[39m=\u001b[39m pywrap_tfe\u001b[39m.\u001b[39;49mTFE_Py_Execute(ctx\u001b[39m.\u001b[39;49m_handle, device_name, op_name,\n\u001b[1;32m     53\u001b[0m                                       inputs, attrs, num_outputs)\n\u001b[1;32m     54\u001b[0m \u001b[39mexcept\u001b[39;00m core\u001b[39m.\u001b[39m_NotOkStatusException \u001b[39mas\u001b[39;00m e:\n\u001b[1;32m     55\u001b[0m   \u001b[39mif\u001b[39;00m name \u001b[39mis\u001b[39;00m \u001b[39mnot\u001b[39;00m \u001b[39mNone\u001b[39;00m:\n",
      "\u001b[0;31mKeyboardInterrupt\u001b[0m: "
     ]
    }
   ],
   "source": [
    "# Compile the model\n",
    "model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])\n",
    "\n",
    "# Train the model\n",
    "history = model.fit(x=X_train, y=y_train, validation_data=(X_test, y_test), epochs=10, batch_size=32)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d31dc9d3",
   "metadata": {},
   "outputs": [],
   "source": [
    "y_pred = model.predict(X_test)\n",
    "y_pred_classes = np"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.10"
  },
  "vscode": {
   "interpreter": {
    "hash": "31f2aee4e71d21fbe5cf8b01ff0e069b9275f58929596ceb00d14d90e3e16cd6"
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
